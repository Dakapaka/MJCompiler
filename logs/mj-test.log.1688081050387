INFO  01:23:10,093 - Compiling source file: C:\Users\Korisnik\Desktop\Faks\4. godina\7. semestar\PP1\projekat\sablon\pp1lab.templateAST\workspace\projekatAvgust\test\program.mj
INFO  01:23:10,113 - #2 program
INFO  01:23:10,113 - #45 test301
INFO  01:23:10,113 - #5 const
INFO  01:23:10,114 - #45 int
INFO  01:23:10,114 - #45 nula
INFO  01:23:10,114 - #27 =
INFO  01:23:10,114 - #44 0
INFO  01:23:10,114 - #36 ;
INFO  01:23:10,115 - #5 const
INFO  01:23:10,115 - #45 int
INFO  01:23:10,115 - #45 jedan
INFO  01:23:10,115 - #27 =
INFO  01:23:10,115 - #44 1
INFO  01:23:10,115 - #36 ;
INFO  01:23:10,115 - #5 const
INFO  01:23:10,115 - #45 int
INFO  01:23:10,115 - #45 pet
INFO  01:23:10,115 - #27 =
INFO  01:23:10,115 - #44 5
INFO  01:23:10,116 - #36 ;
INFO  01:23:10,116 - #45 int
INFO  01:23:10,116 - #45 niz
INFO  01:23:10,116 - #42 [
INFO  01:23:10,116 - #43 ]
INFO  01:23:10,116 - #37 ,
INFO  01:23:10,117 - #45 niz2
INFO  01:23:10,117 - #42 [
INFO  01:23:10,117 - #43 ]
INFO  01:23:10,117 - #37 ,
INFO  01:23:10,117 - #45 a
INFO  01:23:10,117 - #37 ,
INFO  01:23:10,117 - #45 b
INFO  01:23:10,117 - #37 ,
INFO  01:23:10,117 - #45 curr
INFO  01:23:10,117 - #36 ;
INFO  01:23:10,118 - #45 char
INFO  01:23:10,118 - #45 nizch
INFO  01:23:10,118 - #42 [
INFO  01:23:10,118 - #43 ]
INFO  01:23:10,118 - #36 ;
INFO  01:23:10,118 - #45 int
INFO  01:23:10,118 - #45 mat
INFO  01:23:10,118 - #42 [
INFO  01:23:10,118 - #43 ]
INFO  01:23:10,118 - #42 [
INFO  01:23:10,118 - #43 ]
INFO  01:23:10,118 - #36 ;
INFO  01:23:10,119 - #40 {
INFO  01:23:10,119 - #45 int
INFO  01:23:10,119 - #45 foo
INFO  01:23:10,119 - #38 (
INFO  01:23:10,119 - #39 )
INFO  01:23:10,119 - #40 {
INFO  01:23:10,120 - #8 return
INFO  01:23:10,120 - #44 5
INFO  01:23:10,120 - #36 ;
INFO  01:23:10,121 - #41 }
INFO  01:23:10,121 - #16 void
INFO  01:23:10,121 - #45 main
INFO  01:23:10,122 - #38 (
INFO  01:23:10,122 - #39 )
INFO  01:23:10,122 - #45 int
INFO  01:23:10,122 - #45 bodovi
INFO  01:23:10,122 - #36 ;
INFO  01:23:10,122 - #45 bool
INFO  01:23:10,122 - #45 bt
INFO  01:23:10,122 - #36 ;
INFO  01:23:10,122 - #40 {
INFO  01:23:10,122 - #45 niz
INFO  01:23:10,122 - #27 =
INFO  01:23:10,123 - #14 new
INFO  01:23:10,123 - #45 int
INFO  01:23:10,123 - #42 [
INFO  01:23:10,123 - #44 3
INFO  01:23:10,123 - #43 ]
INFO  01:23:10,123 - #36 ;
INFO  01:23:10,123 - #45 niz
INFO  01:23:10,124 - #42 [
INFO  01:23:10,124 - #44 0
INFO  01:23:10,124 - #43 ]
INFO  01:23:10,124 - #27 =
INFO  01:23:10,124 - #44 6
INFO  01:23:10,124 - #36 ;
INFO  01:23:10,124 - #45 niz
INFO  01:23:10,124 - #42 [
INFO  01:23:10,124 - #44 1
INFO  01:23:10,124 - #43 ]
INFO  01:23:10,124 - #27 =
INFO  01:23:10,124 - #44 8
INFO  01:23:10,124 - #36 ;
INFO  01:23:10,124 - #45 niz
INFO  01:23:10,124 - #42 [
INFO  01:23:10,124 - #44 2
INFO  01:23:10,124 - #43 ]
INFO  01:23:10,124 - #27 =
INFO  01:23:10,124 - #44 10
INFO  01:23:10,124 - #36 ;
INFO  01:23:10,124 - #45 niz2
INFO  01:23:10,124 - #27 =
INFO  01:23:10,124 - #45 niz
INFO  01:23:10,125 - #22 .
INFO  01:23:10,125 - #15 map
INFO  01:23:10,125 - #38 (
INFO  01:23:10,125 - #45 curr
INFO  01:23:10,125 - #25 =>
INFO  01:23:10,125 - #45 curr
INFO  01:23:10,125 - #21 *
INFO  01:23:10,125 - #44 3
INFO  01:23:10,125 - #39 )
INFO  01:23:10,126 - #36 ;
INFO  01:23:10,126 - #41 }
INFO  01:23:10,126 - #41 }
INFO  01:23:10,127 - Program(
  ProgName(
   test301
  ) [ProgName]
  VarDeclType(
    VarDeclType(
      VarDeclType(
        ConstDeclType(
          ConstDeclType(
            ConstDeclType(
              NoDeclType(
              ) [NoDeclType]
              ConstDecl(
                Type(
                 int
                ) [Type]
                SingleConstDeclVal(
                  ConstDeclVal(
                   nula
                    ConstNumber(
                     0
                    ) [ConstNumber]
                  ) [ConstDeclVal]
                ) [SingleConstDeclVal]
              ) [ConstDecl]
            ) [ConstDeclType]
            ConstDecl(
              Type(
               int
              ) [Type]
              SingleConstDeclVal(
                ConstDeclVal(
                 jedan
                  ConstNumber(
                   1
                  ) [ConstNumber]
                ) [ConstDeclVal]
              ) [SingleConstDeclVal]
            ) [ConstDecl]
          ) [ConstDeclType]
          ConstDecl(
            Type(
             int
            ) [Type]
            SingleConstDeclVal(
              ConstDeclVal(
               pet
                ConstNumber(
                 5
                ) [ConstNumber]
              ) [ConstDeclVal]
            ) [SingleConstDeclVal]
          ) [ConstDecl]
        ) [ConstDeclType]
        VarDecl(
          Type(
           int
          ) [Type]
          VarDeclVals(
            VarDeclVals(
              VarDeclVals(
                VarDeclVals(
                  NoVarDeclVal(
                    VarDeclVal(
                     niz
                      SingleBrackets(
                      ) [SingleBrackets]
                    ) [VarDeclVal]
                  ) [NoVarDeclVal]
                  VarDeclVal(
                   niz2
                    SingleBrackets(
                    ) [SingleBrackets]
                  ) [VarDeclVal]
                ) [VarDeclVals]
                VarDeclVal(
                 a
                  NoBrackets(
                  ) [NoBrackets]
                ) [VarDeclVal]
              ) [VarDeclVals]
              VarDeclVal(
               b
                NoBrackets(
                ) [NoBrackets]
              ) [VarDeclVal]
            ) [VarDeclVals]
            VarDeclVal(
             curr
              NoBrackets(
              ) [NoBrackets]
            ) [VarDeclVal]
          ) [VarDeclVals]
        ) [VarDecl]
      ) [VarDeclType]
      VarDecl(
        Type(
         char
        ) [Type]
        NoVarDeclVal(
          VarDeclVal(
           nizch
            SingleBrackets(
            ) [SingleBrackets]
          ) [VarDeclVal]
        ) [NoVarDeclVal]
      ) [VarDecl]
    ) [VarDeclType]
    VarDecl(
      Type(
       int
      ) [Type]
      NoVarDeclVal(
        VarDeclVal(
         mat
          TwoBrackets(
          ) [TwoBrackets]
        ) [VarDeclVal]
      ) [NoVarDeclVal]
    ) [VarDecl]
  ) [VarDeclType]
  MethodDeclarations(
    NoMethodDecl(
      MethodDecl(
        MethodTypeName(
          AnyType(
            Type(
             int
            ) [Type]
          ) [AnyType]
         foo
        ) [MethodTypeName]
        NoFormalParam(
        ) [NoFormalParam]
        NoVarDecl(
        ) [NoVarDecl]
        Statements(
          NoStatements(
          ) [NoStatements]
          ReturnExprStmt(
            PositiveExpr(
              Term(
                NumberFactor(
                 5
                ) [NumberFactor]
                NoMulopFactors(
                ) [NoMulopFactors]
              ) [Term]
              NoAddopTerms(
              ) [NoAddopTerms]
            ) [PositiveExpr]
          ) [ReturnExprStmt]
        ) [Statements]
      ) [MethodDecl]
    ) [NoMethodDecl]
    MethodDecl(
      MethodTypeName(
        VoidType(
        ) [VoidType]
       main
      ) [MethodTypeName]
      NoFormalParam(
      ) [NoFormalParam]
      VarDecls(
        VarDecls(
          NoVarDecl(
          ) [NoVarDecl]
          VarDecl(
            Type(
             int
            ) [Type]
            NoVarDeclVal(
              VarDeclVal(
               bodovi
                NoBrackets(
                ) [NoBrackets]
              ) [VarDeclVal]
            ) [NoVarDeclVal]
          ) [VarDecl]
        ) [VarDecls]
        VarDecl(
          Type(
           bool
          ) [Type]
          NoVarDeclVal(
            VarDeclVal(
             bt
              NoBrackets(
              ) [NoBrackets]
            ) [VarDeclVal]
          ) [NoVarDeclVal]
        ) [VarDecl]
      ) [VarDecls]
      Statements(
        Statements(
          Statements(
            Statements(
              Statements(
                NoStatements(
                ) [NoStatements]
                DesignatorStmt(
                  DesignatorStatement(
                    Designator(
                     niz
                      NoExprBrList(
                      ) [NoExprBrList]
                    ) [Designator]
                    AssingopDesignatorExpr(
                      Assignop(
                      ) [Assignop]
                      PositiveExpr(
                        Term(
                          NewOneExprFactor(
                            Type(
                             int
                            ) [Type]
                            PositiveExpr(
                              Term(
                                NumberFactor(
                                 3
                                ) [NumberFactor]
                                NoMulopFactors(
                                ) [NoMulopFactors]
                              ) [Term]
                              NoAddopTerms(
                              ) [NoAddopTerms]
                            ) [PositiveExpr]
                          ) [NewOneExprFactor]
                          NoMulopFactors(
                          ) [NoMulopFactors]
                        ) [Term]
                        NoAddopTerms(
                        ) [NoAddopTerms]
                      ) [PositiveExpr]
                    ) [AssingopDesignatorExpr]
                  ) [DesignatorStatement]
                ) [DesignatorStmt]
              ) [Statements]
              DesignatorStmt(
                DesignatorStatement(
                  Designator(
                   niz
                    ExprBrList(
                      NoExprBrList(
                      ) [NoExprBrList]
                      ExprBr(
                        PositiveExpr(
                          Term(
                            NumberFactor(
                             0
                            ) [NumberFactor]
                            NoMulopFactors(
                            ) [NoMulopFactors]
                          ) [Term]
                          NoAddopTerms(
                          ) [NoAddopTerms]
                        ) [PositiveExpr]
                      ) [ExprBr]
                    ) [ExprBrList]
                  ) [Designator]
                  AssingopDesignatorExpr(
                    Assignop(
                    ) [Assignop]
                    PositiveExpr(
                      Term(
                        NumberFactor(
                         6
                        ) [NumberFactor]
                        NoMulopFactors(
                        ) [NoMulopFactors]
                      ) [Term]
                      NoAddopTerms(
                      ) [NoAddopTerms]
                    ) [PositiveExpr]
                  ) [AssingopDesignatorExpr]
                ) [DesignatorStatement]
              ) [DesignatorStmt]
            ) [Statements]
            DesignatorStmt(
              DesignatorStatement(
                Designator(
                 niz
                  ExprBrList(
                    NoExprBrList(
                    ) [NoExprBrList]
                    ExprBr(
                      PositiveExpr(
                        Term(
                          NumberFactor(
                           1
                          ) [NumberFactor]
                          NoMulopFactors(
                          ) [NoMulopFactors]
                        ) [Term]
                        NoAddopTerms(
                        ) [NoAddopTerms]
                      ) [PositiveExpr]
                    ) [ExprBr]
                  ) [ExprBrList]
                ) [Designator]
                AssingopDesignatorExpr(
                  Assignop(
                  ) [Assignop]
                  PositiveExpr(
                    Term(
                      NumberFactor(
                       8
                      ) [NumberFactor]
                      NoMulopFactors(
                      ) [NoMulopFactors]
                    ) [Term]
                    NoAddopTerms(
                    ) [NoAddopTerms]
                  ) [PositiveExpr]
                ) [AssingopDesignatorExpr]
              ) [DesignatorStatement]
            ) [DesignatorStmt]
          ) [Statements]
          DesignatorStmt(
            DesignatorStatement(
              Designator(
               niz
                ExprBrList(
                  NoExprBrList(
                  ) [NoExprBrList]
                  ExprBr(
                    PositiveExpr(
                      Term(
                        NumberFactor(
                         2
                        ) [NumberFactor]
                        NoMulopFactors(
                        ) [NoMulopFactors]
                      ) [Term]
                      NoAddopTerms(
                      ) [NoAddopTerms]
                    ) [PositiveExpr]
                  ) [ExprBr]
                ) [ExprBrList]
              ) [Designator]
              AssingopDesignatorExpr(
                Assignop(
                ) [Assignop]
                PositiveExpr(
                  Term(
                    NumberFactor(
                     10
                    ) [NumberFactor]
                    NoMulopFactors(
                    ) [NoMulopFactors]
                  ) [Term]
                  NoAddopTerms(
                  ) [NoAddopTerms]
                ) [PositiveExpr]
              ) [AssingopDesignatorExpr]
            ) [DesignatorStatement]
          ) [DesignatorStmt]
        ) [Statements]
        MapStmt(
          Designator(
           niz2
            NoExprBrList(
            ) [NoExprBrList]
          ) [Designator]
          Assignop(
          ) [Assignop]
          Designator(
           niz
            NoExprBrList(
            ) [NoExprBrList]
          ) [Designator]
          MapIdent(
           curr
          ) [MapIdent]
          PositiveExpr(
            Term(
              DesignatorFactor(
                Designator(
                 curr
                  NoExprBrList(
                  ) [NoExprBrList]
                ) [Designator]
              ) [DesignatorFactor]
              MulopFactors(
                NoMulopFactors(
                ) [NoMulopFactors]
                MulopFactor(
                  MultiplyOp(
                  ) [MultiplyOp]
                  NumberFactor(
                   3
                  ) [NumberFactor]
                ) [MulopFactor]
              ) [MulopFactors]
            ) [Term]
            NoAddopTerms(
            ) [NoAddopTerms]
          ) [PositiveExpr]
        ) [MapStmt]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  01:23:10,127 - ===================================
INFO  01:23:10,129 - Deklarisana konstanta nula na liniji 5
INFO  01:23:10,129 - Deklarisana konstanta jedan na liniji 6
INFO  01:23:10,129 - Deklarisana konstanta pet na liniji 7
INFO  01:23:10,129 - Deklarisana promenljiva niz na liniji 9
INFO  01:23:10,129 - Deklarisana promenljiva niz2 na liniji 9
INFO  01:23:10,129 - Deklarisana promenljiva a na liniji 9
INFO  01:23:10,129 - Deklarisana promenljiva b na liniji 9
INFO  01:23:10,129 - Deklarisana promenljiva curr na liniji 9
INFO  01:23:10,129 - Deklarisana promenljiva nizch na liniji 10
INFO  01:23:10,129 - Deklarisana promenljiva mat na liniji 11
INFO  01:23:10,129 - Obradjuje se funkcija foo na liniji 14
INFO  01:23:10,130 - Obradjuje se funkcija main na liniji 18
INFO  01:23:10,130 - Deklarisana promenljiva bodovi na liniji 19
INFO  01:23:10,130 - Deklarisana promenljiva bt na liniji 20
INFO  01:23:10,135 - Parsiranje uspjesno zavrseno!
