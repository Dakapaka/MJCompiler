INFO  16:38:42,993 - Compiling source file: C:\Users\Korisnik\Desktop\Faks\4. godina\7. semestar\PP1\projekat\sablon\pp1lab.templateAST\workspace\projekatAvgust\test\program.mj
INFO  16:38:43,036 - #2 program
INFO  16:38:43,036 - #46 test301
INFO  16:38:43,036 - #5 const
INFO  16:38:43,037 - #46 int
INFO  16:38:43,037 - #46 nula
INFO  16:38:43,037 - #28 =
INFO  16:38:43,038 - #45 0
INFO  16:38:43,038 - #37 ;
INFO  16:38:43,038 - #5 const
INFO  16:38:43,039 - #46 int
INFO  16:38:43,039 - #46 jedan
INFO  16:38:43,039 - #28 =
INFO  16:38:43,039 - #45 1
INFO  16:38:43,039 - #37 ;
INFO  16:38:43,039 - #5 const
INFO  16:38:43,039 - #46 int
INFO  16:38:43,039 - #46 pet
INFO  16:38:43,039 - #28 =
INFO  16:38:43,039 - #45 5
INFO  16:38:43,040 - #37 ;
INFO  16:38:43,040 - #46 int
INFO  16:38:43,040 - #46 niz
INFO  16:38:43,040 - #43 [
INFO  16:38:43,040 - #44 ]
INFO  16:38:43,040 - #38 ,
INFO  16:38:43,042 - #46 niz2
INFO  16:38:43,042 - #43 [
INFO  16:38:43,042 - #44 ]
INFO  16:38:43,042 - #38 ,
INFO  16:38:43,042 - #46 niz3
INFO  16:38:43,042 - #43 [
INFO  16:38:43,042 - #44 ]
INFO  16:38:43,042 - #38 ,
INFO  16:38:43,042 - #46 a
INFO  16:38:43,042 - #38 ,
INFO  16:38:43,042 - #46 b
INFO  16:38:43,042 - #38 ,
INFO  16:38:43,043 - #46 i
INFO  16:38:43,043 - #38 ,
INFO  16:38:43,043 - #46 j
INFO  16:38:43,043 - #37 ;
INFO  16:38:43,043 - #46 int
INFO  16:38:43,043 - #46 curr
INFO  16:38:43,043 - #37 ;
INFO  16:38:43,043 - #46 char
INFO  16:38:43,043 - #46 nizch
INFO  16:38:43,043 - #43 [
INFO  16:38:43,044 - #44 ]
INFO  16:38:43,044 - #37 ;
INFO  16:38:43,044 - #41 {
INFO  16:38:43,044 - #46 int
INFO  16:38:43,044 - #46 foo
INFO  16:38:43,044 - #39 (
INFO  16:38:43,044 - #46 int
INFO  16:38:43,044 - #46 nesto
INFO  16:38:43,044 - #40 )
INFO  16:38:43,045 - #41 {
INFO  16:38:43,046 - #8 return
INFO  16:38:43,046 - #46 nesto
INFO  16:38:43,046 - #21 *
INFO  16:38:43,048 - #45 3
INFO  16:38:43,049 - #37 ;
INFO  16:38:43,051 - #42 }
INFO  16:38:43,051 - #46 int
INFO  16:38:43,052 - #46 fun
INFO  16:38:43,052 - #39 (
INFO  16:38:43,052 - #40 )
INFO  16:38:43,052 - #41 {
INFO  16:38:43,053 - #8 return
INFO  16:38:43,053 - #45 1
INFO  16:38:43,053 - #37 ;
INFO  16:38:43,053 - #42 }
INFO  16:38:43,053 - #16 void
INFO  16:38:43,053 - #46 main
INFO  16:38:43,054 - #39 (
INFO  16:38:43,054 - #40 )
INFO  16:38:43,054 - #46 int
INFO  16:38:43,054 - #46 bodovi
INFO  16:38:43,054 - #37 ;
INFO  16:38:43,054 - #46 bool
INFO  16:38:43,054 - #46 bt
INFO  16:38:43,054 - #37 ;
INFO  16:38:43,054 - #41 {
INFO  16:38:43,054 - #46 i
INFO  16:38:43,054 - #28 =
INFO  16:38:43,054 - #45 0
INFO  16:38:43,055 - #37 ;
INFO  16:38:43,056 - #46 niz
INFO  16:38:43,056 - #28 =
INFO  16:38:43,056 - #14 new
INFO  16:38:43,056 - #46 int
INFO  16:38:43,056 - #43 [
INFO  16:38:43,056 - #45 5
INFO  16:38:43,056 - #44 ]
INFO  16:38:43,056 - #37 ;
INFO  16:38:43,056 - #46 niz2
INFO  16:38:43,056 - #28 =
INFO  16:38:43,056 - #46 niz
INFO  16:38:43,056 - #22 .
INFO  16:38:43,056 - #23 findAndReplace
INFO  16:38:43,056 - #39 (
INFO  16:38:43,056 - #45 10
INFO  16:38:43,056 - #38 ,
INFO  16:38:43,057 - #46 curr
INFO  16:38:43,057 - #26 =>
INFO  16:38:43,057 - #46 curr
INFO  16:38:43,057 - #21 *
INFO  16:38:43,057 - #45 3
INFO  16:38:43,057 - #40 )
INFO  16:38:43,057 - #37 ;
INFO  16:38:43,057 - #42 }
INFO  16:38:43,057 - #42 }
INFO  16:38:43,059 - Program(
  ProgName(
   test301
  ) [ProgName]
  VarDeclType(
    VarDeclType(
      VarDeclType(
        ConstDeclType(
          ConstDeclType(
            ConstDeclType(
              NoDeclType(
              ) [NoDeclType]
              ConstDecl(
                Type(
                 int
                ) [Type]
                SingleConstDeclVal(
                  ConstDeclVal(
                   nula
                    ConstNumber(
                     0
                    ) [ConstNumber]
                  ) [ConstDeclVal]
                ) [SingleConstDeclVal]
              ) [ConstDecl]
            ) [ConstDeclType]
            ConstDecl(
              Type(
               int
              ) [Type]
              SingleConstDeclVal(
                ConstDeclVal(
                 jedan
                  ConstNumber(
                   1
                  ) [ConstNumber]
                ) [ConstDeclVal]
              ) [SingleConstDeclVal]
            ) [ConstDecl]
          ) [ConstDeclType]
          ConstDecl(
            Type(
             int
            ) [Type]
            SingleConstDeclVal(
              ConstDeclVal(
               pet
                ConstNumber(
                 5
                ) [ConstNumber]
              ) [ConstDeclVal]
            ) [SingleConstDeclVal]
          ) [ConstDecl]
        ) [ConstDeclType]
        VarDecl(
          Type(
           int
          ) [Type]
          VarDeclVals(
            VarDeclVals(
              VarDeclVals(
                VarDeclVals(
                  VarDeclVals(
                    VarDeclVals(
                      NoVarDeclVal(
                        VarDeclVal(
                         niz
                          SingleBrackets(
                          ) [SingleBrackets]
                        ) [VarDeclVal]
                      ) [NoVarDeclVal]
                      VarDeclVal(
                       niz2
                        SingleBrackets(
                        ) [SingleBrackets]
                      ) [VarDeclVal]
                    ) [VarDeclVals]
                    VarDeclVal(
                     niz3
                      SingleBrackets(
                      ) [SingleBrackets]
                    ) [VarDeclVal]
                  ) [VarDeclVals]
                  VarDeclVal(
                   a
                    NoBrackets(
                    ) [NoBrackets]
                  ) [VarDeclVal]
                ) [VarDeclVals]
                VarDeclVal(
                 b
                  NoBrackets(
                  ) [NoBrackets]
                ) [VarDeclVal]
              ) [VarDeclVals]
              VarDeclVal(
               i
                NoBrackets(
                ) [NoBrackets]
              ) [VarDeclVal]
            ) [VarDeclVals]
            VarDeclVal(
             j
              NoBrackets(
              ) [NoBrackets]
            ) [VarDeclVal]
          ) [VarDeclVals]
        ) [VarDecl]
      ) [VarDeclType]
      VarDecl(
        Type(
         int
        ) [Type]
        NoVarDeclVal(
          VarDeclVal(
           curr
            NoBrackets(
            ) [NoBrackets]
          ) [VarDeclVal]
        ) [NoVarDeclVal]
      ) [VarDecl]
    ) [VarDeclType]
    VarDecl(
      Type(
       char
      ) [Type]
      NoVarDeclVal(
        VarDeclVal(
         nizch
          SingleBrackets(
          ) [SingleBrackets]
        ) [VarDeclVal]
      ) [NoVarDeclVal]
    ) [VarDecl]
  ) [VarDeclType]
  MethodDeclarations(
    MethodDeclarations(
      NoMethodDecl(
        MethodDecl(
          MethodTypeName(
            AnyType(
              Type(
               int
              ) [Type]
            ) [AnyType]
           foo
          ) [MethodTypeName]
          FormalParams(
            SingleFormalParamDecl(
              FormalParamDecl(
                Type(
                 int
                ) [Type]
               nesto
                NoBrackets(
                ) [NoBrackets]
              ) [FormalParamDecl]
            ) [SingleFormalParamDecl]
          ) [FormalParams]
          NoVarDecl(
          ) [NoVarDecl]
          Statements(
            NoStatements(
            ) [NoStatements]
            ReturnExprStmt(
              PositiveExpr(
                Term(
                  DesignatorFactor(
                    Designator(
                     nesto
                      NoExprBrList(
                      ) [NoExprBrList]
                    ) [Designator]
                  ) [DesignatorFactor]
                  MulopFactors(
                    NoMulopFactors(
                    ) [NoMulopFactors]
                    MulopFactor(
                      MultiplyOp(
                      ) [MultiplyOp]
                      NumberFactor(
                       3
                      ) [NumberFactor]
                    ) [MulopFactor]
                  ) [MulopFactors]
                ) [Term]
                NoAddopTerms(
                ) [NoAddopTerms]
              ) [PositiveExpr]
            ) [ReturnExprStmt]
          ) [Statements]
        ) [MethodDecl]
      ) [NoMethodDecl]
      MethodDecl(
        MethodTypeName(
          AnyType(
            Type(
             int
            ) [Type]
          ) [AnyType]
         fun
        ) [MethodTypeName]
        NoFormalParam(
        ) [NoFormalParam]
        NoVarDecl(
        ) [NoVarDecl]
        Statements(
          NoStatements(
          ) [NoStatements]
          ReturnExprStmt(
            PositiveExpr(
              Term(
                NumberFactor(
                 1
                ) [NumberFactor]
                NoMulopFactors(
                ) [NoMulopFactors]
              ) [Term]
              NoAddopTerms(
              ) [NoAddopTerms]
            ) [PositiveExpr]
          ) [ReturnExprStmt]
        ) [Statements]
      ) [MethodDecl]
    ) [MethodDeclarations]
    MethodDecl(
      MethodTypeName(
        VoidType(
        ) [VoidType]
       main
      ) [MethodTypeName]
      NoFormalParam(
      ) [NoFormalParam]
      VarDecls(
        VarDecls(
          NoVarDecl(
          ) [NoVarDecl]
          VarDecl(
            Type(
             int
            ) [Type]
            NoVarDeclVal(
              VarDeclVal(
               bodovi
                NoBrackets(
                ) [NoBrackets]
              ) [VarDeclVal]
            ) [NoVarDeclVal]
          ) [VarDecl]
        ) [VarDecls]
        VarDecl(
          Type(
           bool
          ) [Type]
          NoVarDeclVal(
            VarDeclVal(
             bt
              NoBrackets(
              ) [NoBrackets]
            ) [VarDeclVal]
          ) [NoVarDeclVal]
        ) [VarDecl]
      ) [VarDecls]
      Statements(
        Statements(
          Statements(
            NoStatements(
            ) [NoStatements]
            DesignatorStmt(
              DesignatorStatement(
                Designator(
                 i
                  NoExprBrList(
                  ) [NoExprBrList]
                ) [Designator]
                AssingopDesignatorExpr(
                  Assignop(
                  ) [Assignop]
                  PositiveExpr(
                    Term(
                      NumberFactor(
                       0
                      ) [NumberFactor]
                      NoMulopFactors(
                      ) [NoMulopFactors]
                    ) [Term]
                    NoAddopTerms(
                    ) [NoAddopTerms]
                  ) [PositiveExpr]
                ) [AssingopDesignatorExpr]
              ) [DesignatorStatement]
            ) [DesignatorStmt]
          ) [Statements]
          DesignatorStmt(
            DesignatorStatement(
              Designator(
               niz
                NoExprBrList(
                ) [NoExprBrList]
              ) [Designator]
              AssingopDesignatorExpr(
                Assignop(
                ) [Assignop]
                PositiveExpr(
                  Term(
                    NewOneExprFactor(
                      Type(
                       int
                      ) [Type]
                      PositiveExpr(
                        Term(
                          NumberFactor(
                           5
                          ) [NumberFactor]
                          NoMulopFactors(
                          ) [NoMulopFactors]
                        ) [Term]
                        NoAddopTerms(
                        ) [NoAddopTerms]
                      ) [PositiveExpr]
                    ) [NewOneExprFactor]
                    NoMulopFactors(
                    ) [NoMulopFactors]
                  ) [Term]
                  NoAddopTerms(
                  ) [NoAddopTerms]
                ) [PositiveExpr]
              ) [AssingopDesignatorExpr]
            ) [DesignatorStatement]
          ) [DesignatorStmt]
        ) [Statements]
        FindStmt(
          Designator(
           niz2
            NoExprBrList(
            ) [NoExprBrList]
          ) [Designator]
          Assignop(
          ) [Assignop]
          Designator(
           niz
            NoExprBrList(
            ) [NoExprBrList]
          ) [Designator]
          PositiveExpr(
            Term(
              NumberFactor(
               10
              ) [NumberFactor]
              NoMulopFactors(
              ) [NoMulopFactors]
            ) [Term]
            NoAddopTerms(
            ) [NoAddopTerms]
          ) [PositiveExpr]
          FindIdent(
           curr
          ) [FindIdent]
          PositiveExpr(
            Term(
              DesignatorFactor(
                Designator(
                 curr
                  NoExprBrList(
                  ) [NoExprBrList]
                ) [Designator]
              ) [DesignatorFactor]
              MulopFactors(
                NoMulopFactors(
                ) [NoMulopFactors]
                MulopFactor(
                  MultiplyOp(
                  ) [MultiplyOp]
                  NumberFactor(
                   3
                  ) [NumberFactor]
                ) [MulopFactor]
              ) [MulopFactors]
            ) [Term]
            NoAddopTerms(
            ) [NoAddopTerms]
          ) [PositiveExpr]
        ) [FindStmt]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  16:38:43,059 - ===================================
INFO  16:38:43,062 - Deklarisana konstanta nula na liniji 5
INFO  16:38:43,062 - Deklarisana konstanta jedan na liniji 6
INFO  16:38:43,062 - Deklarisana konstanta pet na liniji 7
INFO  16:38:43,062 - Deklarisana promenljiva niz na liniji 9
INFO  16:38:43,062 - Deklarisana promenljiva niz2 na liniji 9
INFO  16:38:43,062 - Deklarisana promenljiva niz3 na liniji 9
INFO  16:38:43,062 - Deklarisana promenljiva a na liniji 9
INFO  16:38:43,062 - Deklarisana promenljiva b na liniji 9
INFO  16:38:43,062 - Deklarisana promenljiva i na liniji 9
INFO  16:38:43,062 - Deklarisana promenljiva j na liniji 9
INFO  16:38:43,062 - Deklarisana promenljiva curr na liniji 10
INFO  16:38:43,062 - Deklarisana promenljiva nizch na liniji 11
INFO  16:38:43,062 - Obradjuje se funkcija foo na liniji 14
INFO  16:38:43,062 - Deklarisan parametar nesto na liniji 14
INFO  16:38:43,062 - Obradjuje se funkcija fun na liniji 18
INFO  16:38:43,062 - Obradjuje se funkcija main na liniji 22
INFO  16:38:43,062 - Deklarisana promenljiva bodovi na liniji 23
INFO  16:38:43,062 - Deklarisana promenljiva bt na liniji 24
INFO  16:38:43,068 - Parsiranje uspjesno zavrseno!
