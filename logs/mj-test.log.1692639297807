INFO  19:33:28,268 - Compiling source file: C:\Users\Korisnik\Desktop\Faks\4. godina\7. semestar\PP1\projekat\sablon\pp1lab.templateAST\workspace\projekatAvgust\test\program.mj
INFO  19:33:28,284 - #2 program
INFO  19:33:28,284 - #48 test301
INFO  19:33:28,284 - #48 int
INFO  19:33:28,285 - #48 x
INFO  19:33:28,285 - #40 ,
INFO  19:33:28,286 - #48 y
INFO  19:33:28,286 - #39 ;
INFO  19:33:28,286 - #43 {
INFO  19:33:28,286 - #16 void
INFO  19:33:28,286 - #48 main
INFO  19:33:28,287 - #41 (
INFO  19:33:28,287 - #42 )
INFO  19:33:28,287 - #48 int
INFO  19:33:28,287 - #48 i
INFO  19:33:28,287 - #39 ;
INFO  19:33:28,287 - #48 int
INFO  19:33:28,288 - #48 niz
INFO  19:33:28,288 - #45 [
INFO  19:33:28,288 - #46 ]
INFO  19:33:28,288 - #39 ;
INFO  19:33:28,288 - #48 int
INFO  19:33:28,288 - #48 curr
INFO  19:33:28,288 - #39 ;
INFO  19:33:28,288 - #43 {
INFO  19:33:28,288 - #48 niz
INFO  19:33:28,289 - #28 =
INFO  19:33:28,289 - #14 new
INFO  19:33:28,290 - #48 int
INFO  19:33:28,290 - #45 [
INFO  19:33:28,290 - #47 5
INFO  19:33:28,290 - #46 ]
INFO  19:33:28,290 - #39 ;
INFO  19:33:28,291 - #48 i
INFO  19:33:28,291 - #28 =
INFO  19:33:28,291 - #47 0
INFO  19:33:28,291 - #39 ;
INFO  19:33:28,291 - #13 while
INFO  19:33:28,291 - #41 (
INFO  19:33:28,291 - #48 i
INFO  19:33:28,292 - #32 <
INFO  19:33:28,292 - #47 5
INFO  19:33:28,292 - #42 )
INFO  19:33:28,293 - #43 {
INFO  19:33:28,293 - #48 niz
INFO  19:33:28,293 - #45 [
INFO  19:33:28,293 - #48 i
INFO  19:33:28,293 - #46 ]
INFO  19:33:28,293 - #28 =
INFO  19:33:28,293 - #48 i
INFO  19:33:28,294 - #39 ;
INFO  19:33:28,294 - #48 i
INFO  19:33:28,294 - #11 ++
INFO  19:33:28,294 - #39 ;
INFO  19:33:28,294 - #44 }
INFO  19:33:28,294 - #48 niz
INFO  19:33:28,294 - #22 .
INFO  19:33:28,294 - #34 foreach
INFO  19:33:28,294 - #41 (
INFO  19:33:28,295 - #48 curr
INFO  19:33:28,295 - #26 =>
INFO  19:33:28,295 - #43 {
INFO  19:33:28,295 - #9 if
INFO  19:33:28,295 - #41 (
INFO  19:33:28,296 - #48 curr
INFO  19:33:28,296 - #27 ==
INFO  19:33:28,296 - #47 2
INFO  19:33:28,296 - #42 )
INFO  19:33:28,296 - #7 continue
INFO  19:33:28,297 - #39 ;
INFO  19:33:28,297 - #9 if
INFO  19:33:28,297 - #41 (
INFO  19:33:28,297 - #48 curr
INFO  19:33:28,297 - #27 ==
INFO  19:33:28,297 - #47 3
INFO  19:33:28,297 - #42 )
INFO  19:33:28,297 - #6 break
INFO  19:33:28,297 - #39 ;
INFO  19:33:28,297 - #3 print
INFO  19:33:28,298 - #41 (
INFO  19:33:28,298 - #48 curr
INFO  19:33:28,298 - #42 )
INFO  19:33:28,298 - #39 ;
INFO  19:33:28,298 - #44 }
INFO  19:33:28,298 - #42 )
INFO  19:33:28,298 - #39 ;
INFO  19:33:28,298 - #44 }
INFO  19:33:28,298 - #44 }
INFO  19:33:28,300 - Program(
  ProgName(
   test301
  ) [ProgName]
  VarDeclType(
    NoDeclType(
    ) [NoDeclType]
    VarDecl(
      Type(
       int
      ) [Type]
      VarDeclVals(
        NoVarDeclVal(
          VarDeclVal(
           x
            NoBrackets(
            ) [NoBrackets]
          ) [VarDeclVal]
        ) [NoVarDeclVal]
        VarDeclVal(
         y
          NoBrackets(
          ) [NoBrackets]
        ) [VarDeclVal]
      ) [VarDeclVals]
    ) [VarDecl]
  ) [VarDeclType]
  NoMethodDecl(
    MethodDecl(
      MethodTypeName(
        VoidType(
        ) [VoidType]
       main
      ) [MethodTypeName]
      NoFormalParam(
      ) [NoFormalParam]
      VarDecls(
        VarDecls(
          VarDecls(
            NoVarDecl(
            ) [NoVarDecl]
            VarDecl(
              Type(
               int
              ) [Type]
              NoVarDeclVal(
                VarDeclVal(
                 i
                  NoBrackets(
                  ) [NoBrackets]
                ) [VarDeclVal]
              ) [NoVarDeclVal]
            ) [VarDecl]
          ) [VarDecls]
          VarDecl(
            Type(
             int
            ) [Type]
            NoVarDeclVal(
              VarDeclVal(
               niz
                SingleBrackets(
                ) [SingleBrackets]
              ) [VarDeclVal]
            ) [NoVarDeclVal]
          ) [VarDecl]
        ) [VarDecls]
        VarDecl(
          Type(
           int
          ) [Type]
          NoVarDeclVal(
            VarDeclVal(
             curr
              NoBrackets(
              ) [NoBrackets]
            ) [VarDeclVal]
          ) [NoVarDeclVal]
        ) [VarDecl]
      ) [VarDecls]
      Statements(
        Statements(
          Statements(
            Statements(
              NoStatements(
              ) [NoStatements]
              DesignatorStmt(
                DesignatorStatement(
                  Designator(
                   niz
                    NoExprBrList(
                    ) [NoExprBrList]
                  ) [Designator]
                  AssingopDesignatorExpr(
                    Assignop(
                    ) [Assignop]
                    PositiveExpr(
                      Term(
                        NewOneExprFactor(
                          Type(
                           int
                          ) [Type]
                          PositiveExpr(
                            Term(
                              NumberFactor(
                               5
                              ) [NumberFactor]
                              NoMulopFactors(
                              ) [NoMulopFactors]
                            ) [Term]
                            NoAddopTerms(
                            ) [NoAddopTerms]
                          ) [PositiveExpr]
                        ) [NewOneExprFactor]
                        NoMulopFactors(
                        ) [NoMulopFactors]
                      ) [Term]
                      NoAddopTerms(
                      ) [NoAddopTerms]
                    ) [PositiveExpr]
                  ) [AssingopDesignatorExpr]
                ) [DesignatorStatement]
              ) [DesignatorStmt]
            ) [Statements]
            DesignatorStmt(
              DesignatorStatement(
                Designator(
                 i
                  NoExprBrList(
                  ) [NoExprBrList]
                ) [Designator]
                AssingopDesignatorExpr(
                  Assignop(
                  ) [Assignop]
                  PositiveExpr(
                    Term(
                      NumberFactor(
                       0
                      ) [NumberFactor]
                      NoMulopFactors(
                      ) [NoMulopFactors]
                    ) [Term]
                    NoAddopTerms(
                    ) [NoAddopTerms]
                  ) [PositiveExpr]
                ) [AssingopDesignatorExpr]
              ) [DesignatorStatement]
            ) [DesignatorStmt]
          ) [Statements]
          WhileStmt(
            While(
            ) [While]
            Condition(
              ConditionBegin(
              ) [ConditionBegin]
              SingleCondTerm(
                CondTerm(
                  CondTermBegin(
                  ) [CondTermBegin]
                  SingleCondFact(
                    CondFactExprRelop(
                      PositiveExpr(
                        Term(
                          DesignatorFactor(
                            Designator(
                             i
                              NoExprBrList(
                              ) [NoExprBrList]
                            ) [Designator]
                          ) [DesignatorFactor]
                          NoMulopFactors(
                          ) [NoMulopFactors]
                        ) [Term]
                        NoAddopTerms(
                        ) [NoAddopTerms]
                      ) [PositiveExpr]
                      LessOp(
                      ) [LessOp]
                      PositiveExpr(
                        Term(
                          NumberFactor(
                           5
                          ) [NumberFactor]
                          NoMulopFactors(
                          ) [NoMulopFactors]
                        ) [Term]
                        NoAddopTerms(
                        ) [NoAddopTerms]
                      ) [PositiveExpr]
                    ) [CondFactExprRelop]
                  ) [SingleCondFact]
                ) [CondTerm]
              ) [SingleCondTerm]
            ) [Condition]
            StatmentStmt(
              Statements(
                Statements(
                  NoStatements(
                  ) [NoStatements]
                  DesignatorStmt(
                    DesignatorStatement(
                      Designator(
                       niz
                        ExprBrList(
                          NoExprBrList(
                          ) [NoExprBrList]
                          ExprBr(
                            PositiveExpr(
                              Term(
                                DesignatorFactor(
                                  Designator(
                                   i
                                    NoExprBrList(
                                    ) [NoExprBrList]
                                  ) [Designator]
                                ) [DesignatorFactor]
                                NoMulopFactors(
                                ) [NoMulopFactors]
                              ) [Term]
                              NoAddopTerms(
                              ) [NoAddopTerms]
                            ) [PositiveExpr]
                          ) [ExprBr]
                        ) [ExprBrList]
                      ) [Designator]
                      AssingopDesignatorExpr(
                        Assignop(
                        ) [Assignop]
                        PositiveExpr(
                          Term(
                            DesignatorFactor(
                              Designator(
                               i
                                NoExprBrList(
                                ) [NoExprBrList]
                              ) [Designator]
                            ) [DesignatorFactor]
                            NoMulopFactors(
                            ) [NoMulopFactors]
                          ) [Term]
                          NoAddopTerms(
                          ) [NoAddopTerms]
                        ) [PositiveExpr]
                      ) [AssingopDesignatorExpr]
                    ) [DesignatorStatement]
                  ) [DesignatorStmt]
                ) [Statements]
                DesignatorStmt(
                  DesignatorStatement(
                    Designator(
                     i
                      NoExprBrList(
                      ) [NoExprBrList]
                    ) [Designator]
                    IncDesignatorExpr(
                    ) [IncDesignatorExpr]
                  ) [DesignatorStatement]
                ) [DesignatorStmt]
              ) [Statements]
            ) [StatmentStmt]
          ) [WhileStmt]
        ) [Statements]
        ForEachStmt(
          Designator(
           niz
            NoExprBrList(
            ) [NoExprBrList]
          ) [Designator]
          Foreach(
          ) [Foreach]
          FindIdent(
           curr
          ) [FindIdent]
          StatmentStmt(
            Statements(
              Statements(
                Statements(
                  NoStatements(
                  ) [NoStatements]
                  IfStmt(
                    If(
                    ) [If]
                    Condition(
                      ConditionBegin(
                      ) [ConditionBegin]
                      SingleCondTerm(
                        CondTerm(
                          CondTermBegin(
                          ) [CondTermBegin]
                          SingleCondFact(
                            CondFactExprRelop(
                              PositiveExpr(
                                Term(
                                  DesignatorFactor(
                                    Designator(
                                     curr
                                      NoExprBrList(
                                      ) [NoExprBrList]
                                    ) [Designator]
                                  ) [DesignatorFactor]
                                  NoMulopFactors(
                                  ) [NoMulopFactors]
                                ) [Term]
                                NoAddopTerms(
                                ) [NoAddopTerms]
                              ) [PositiveExpr]
                              IsEqualOp(
                              ) [IsEqualOp]
                              PositiveExpr(
                                Term(
                                  NumberFactor(
                                   2
                                  ) [NumberFactor]
                                  NoMulopFactors(
                                  ) [NoMulopFactors]
                                ) [Term]
                                NoAddopTerms(
                                ) [NoAddopTerms]
                              ) [PositiveExpr]
                            ) [CondFactExprRelop]
                          ) [SingleCondFact]
                        ) [CondTerm]
                      ) [SingleCondTerm]
                    ) [Condition]
                    ContinueStmt(
                    ) [ContinueStmt]
                  ) [IfStmt]
                ) [Statements]
                IfStmt(
                  If(
                  ) [If]
                  Condition(
                    ConditionBegin(
                    ) [ConditionBegin]
                    SingleCondTerm(
                      CondTerm(
                        CondTermBegin(
                        ) [CondTermBegin]
                        SingleCondFact(
                          CondFactExprRelop(
                            PositiveExpr(
                              Term(
                                DesignatorFactor(
                                  Designator(
                                   curr
                                    NoExprBrList(
                                    ) [NoExprBrList]
                                  ) [Designator]
                                ) [DesignatorFactor]
                                NoMulopFactors(
                                ) [NoMulopFactors]
                              ) [Term]
                              NoAddopTerms(
                              ) [NoAddopTerms]
                            ) [PositiveExpr]
                            IsEqualOp(
                            ) [IsEqualOp]
                            PositiveExpr(
                              Term(
                                NumberFactor(
                                 3
                                ) [NumberFactor]
                                NoMulopFactors(
                                ) [NoMulopFactors]
                              ) [Term]
                              NoAddopTerms(
                              ) [NoAddopTerms]
                            ) [PositiveExpr]
                          ) [CondFactExprRelop]
                        ) [SingleCondFact]
                      ) [CondTerm]
                    ) [SingleCondTerm]
                  ) [Condition]
                  BreakStmt(
                  ) [BreakStmt]
                ) [IfStmt]
              ) [Statements]
              PrintNoNumStmt(
                PositiveExpr(
                  Term(
                    DesignatorFactor(
                      Designator(
                       curr
                        NoExprBrList(
                        ) [NoExprBrList]
                      ) [Designator]
                    ) [DesignatorFactor]
                    NoMulopFactors(
                    ) [NoMulopFactors]
                  ) [Term]
                  NoAddopTerms(
                  ) [NoAddopTerms]
                ) [PositiveExpr]
              ) [PrintNoNumStmt]
            ) [Statements]
          ) [StatmentStmt]
        ) [ForEachStmt]
      ) [Statements]
    ) [MethodDecl]
  ) [NoMethodDecl]
) [Program]
INFO  19:33:28,300 - ===================================
INFO  19:33:28,302 - Deklarisana promenljiva x na liniji 5
INFO  19:33:28,302 - Deklarisana promenljiva y na liniji 5
INFO  19:33:28,302 - Obradjuje se funkcija main na liniji 8
INFO  19:33:28,302 - Deklarisana promenljiva i na liniji 9
INFO  19:33:28,302 - Deklarisana promenljiva niz na liniji 10
INFO  19:33:28,302 - Deklarisana promenljiva curr na liniji 11
INFO  19:33:28,308 - Parsiranje uspjesno zavrseno!
