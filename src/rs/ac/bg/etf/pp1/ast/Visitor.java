// generated with ast extension for cup
// version 0.8
// 21/7/2023 19:37:6


package rs.ac.bg.etf.pp1.ast;

public interface Visitor { 

    public void visit(Mulop Mulop);
    public void visit(Relop Relop);
    public void visit(DesignatorExpr DesignatorExpr);
    public void visit(MulopFactorList MulopFactorList);
    public void visit(MethodType MethodType);
    public void visit(CondTermList CondTermList);
    public void visit(StatementList StatementList);
    public void visit(Addop Addop);
    public void visit(Factor Factor);
    public void visit(CondFactList CondFactList);
    public void visit(VarDeclValList VarDeclValList);
    public void visit(VarDeclList VarDeclList);
    public void visit(FormalParamList FormalParamList);
    public void visit(Expr Expr);
    public void visit(ConstVal ConstVal);
    public void visit(Statement Statement);
    public void visit(ActParamList ActParamList);
    public void visit(Array Array);
    public void visit(CondFact CondFact);
    public void visit(MethodDeclList MethodDeclList);
    public void visit(ConstDeclValList ConstDeclValList);
    public void visit(FormPars FormPars);
    public void visit(DeclType DeclType);
    public void visit(ExprBrackets ExprBrackets);
    public void visit(AddopTermList AddopTermList);
    public void visit(Label Label);
    public void visit(Type Type);
    public void visit(Assignop Assignop);
    public void visit(ConstFalse ConstFalse);
    public void visit(ConstTrue ConstTrue);
    public void visit(ConstChar ConstChar);
    public void visit(ConstNumber ConstNumber);
    public void visit(SingleConstDeclVal SingleConstDeclVal);
    public void visit(ConstDeclVals ConstDeclVals);
    public void visit(ConstDeclVal ConstDeclVal);
    public void visit(ConstDecl ConstDecl);
    public void visit(NoBrackets NoBrackets);
    public void visit(TwoBrackets TwoBrackets);
    public void visit(SingleBrackets SingleBrackets);
    public void visit(VarDeclVal VarDeclVal);
    public void visit(VarDeclValListDerived1 VarDeclValListDerived1);
    public void visit(NoVarDeclVal NoVarDeclVal);
    public void visit(VarDeclVals VarDeclVals);
    public void visit(VarDecl VarDecl);
    public void visit(NoVarDecl NoVarDecl);
    public void visit(VarDecls VarDecls);
    public void visit(NoDeclType NoDeclType);
    public void visit(VarDeclType VarDeclType);
    public void visit(ConstDeclType ConstDeclType);
    public void visit(FormalParamDecl FormalParamDecl);
    public void visit(SingleFormalParamDecl SingleFormalParamDecl);
    public void visit(FormalParamDecls FormalParamDecls);
    public void visit(NoFormalParam NoFormalParam);
    public void visit(FormalParams FormalParams);
    public void visit(VoidType VoidType);
    public void visit(AnyType AnyType);
    public void visit(SingleActParamExpr SingleActParamExpr);
    public void visit(ActParamExprs ActParamExprs);
    public void visit(DesignatorExprDerived1 DesignatorExprDerived1);
    public void visit(DecDesignatorExpr DecDesignatorExpr);
    public void visit(IncDesignatorExpr IncDesignatorExpr);
    public void visit(ParenDesignatorExpr ParenDesignatorExpr);
    public void visit(ParenActDesignatorExpr ParenActDesignatorExpr);
    public void visit(AssingopDesignatorExpr AssingopDesignatorExpr);
    public void visit(NewTwoExprFactor NewTwoExprFactor);
    public void visit(NewOneExprFactor NewOneExprFactor);
    public void visit(DesignatorFactor DesignatorFactor);
    public void visit(FuncCallWIthParam FuncCallWIthParam);
    public void visit(FuncCallNoParam FuncCallNoParam);
    public void visit(ExprFactor ExprFactor);
    public void visit(FalseFactor FalseFactor);
    public void visit(TrueFactor TrueFactor);
    public void visit(CharFactor CharFactor);
    public void visit(NumberFactor NumberFactor);
    public void visit(ModOp ModOp);
    public void visit(DivideOp DivideOp);
    public void visit(MultiplyOp MultiplyOp);
    public void visit(MulopFactor MulopFactor);
    public void visit(NoMulopFactors NoMulopFactors);
    public void visit(MulopFactors MulopFactors);
    public void visit(MinusOp MinusOp);
    public void visit(PlusOp PlusOp);
    public void visit(AddopTerm AddopTerm);
    public void visit(NoAddopTerms NoAddopTerms);
    public void visit(AddopTerms AddopTerms);
    public void visit(Term Term);
    public void visit(PositiveExpr PositiveExpr);
    public void visit(NegativeExpr NegativeExpr);
    public void visit(ExprBr ExprBr);
    public void visit(NoExprBrList NoExprBrList);
    public void visit(ExprBrList ExprBrList);
    public void visit(Designator Designator);
    public void visit(DesignatorStatement DesignatorStatement);
    public void visit(LequalOp LequalOp);
    public void visit(LessOp LessOp);
    public void visit(GequalOp GequalOp);
    public void visit(GreaterOp GreaterOp);
    public void visit(NeqOp NeqOp);
    public void visit(IsEqualOp IsEqualOp);
    public void visit(CondFactExprRelop CondFactExprRelop);
    public void visit(CondFactExpr CondFactExpr);
    public void visit(SingleCondFact SingleCondFact);
    public void visit(CondFacts CondFacts);
    public void visit(CondTermBegin CondTermBegin);
    public void visit(CondTerm CondTerm);
    public void visit(SingleCondTerm SingleCondTerm);
    public void visit(CondTerms CondTerms);
    public void visit(ConditionBegin ConditionBegin);
    public void visit(Condition Condition);
    public void visit(While While);
    public void visit(FindIdent FindIdent);
    public void visit(Else Else);
    public void visit(If If);
    public void visit(Foreach Foreach);
    public void visit(FindIdentExpr FindIdentExpr);
    public void visit(ForEachStmt ForEachStmt);
    public void visit(FindAnyStmt FindAnyStmt);
    public void visit(FindStmt FindStmt);
    public void visit(IfElseStmt IfElseStmt);
    public void visit(IfStmt IfStmt);
    public void visit(WhileStmt WhileStmt);
    public void visit(BreakStmt BreakStmt);
    public void visit(ContinueStmt ContinueStmt);
    public void visit(ReturnExprStmt ReturnExprStmt);
    public void visit(ReturnStmt ReturnStmt);
    public void visit(PrintNoNumStmt PrintNoNumStmt);
    public void visit(PrintNumStmt PrintNumStmt);
    public void visit(StatmentStmt StatmentStmt);
    public void visit(ReadStmt ReadStmt);
    public void visit(DesignatorStmt DesignatorStmt);
    public void visit(NoStatements NoStatements);
    public void visit(Statements Statements);
    public void visit(MethodTypeName MethodTypeName);
    public void visit(MethodDecl MethodDecl);
    public void visit(NoMethodDecl NoMethodDecl);
    public void visit(MethodDeclarations MethodDeclarations);
    public void visit(ProgName ProgName);
    public void visit(Program Program);

}
